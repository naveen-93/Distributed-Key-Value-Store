syntax = "proto3";
package kvstore;

option go_package = "kvstore/proto";

service KVStore {
  rpc Get(GetRequest) returns (GetResponse) {}
  rpc Put(PutRequest) returns (PutResponse) {}
  
  // Raft-related RPCs
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse) {}
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}
}

message GetRequest {
  string key = 1;
}

message GetResponse {
  string value = 1;
  bool exists = 2;
  string error = 3;
}

message PutRequest {
  string key = 1;
  string value = 2;
}

message PutResponse {
  string old_value = 1;
  bool had_old_value = 2;
  string error = 3;
}

// Define Raft-related messages

message RequestVoteRequest {
  int64 term = 1;
  string candidate_id = 2;
  int64 last_log_index = 3;
  int64 last_log_term = 4;
}

message RequestVoteResponse {
  int64 term = 1;
  bool vote_granted = 2;
}

message AppendEntriesRequest {
  int64 term = 1;
  string leader_id = 2;
  int64 prev_log_index = 3;
  int64 prev_log_term = 4;
  repeated LogEntry entries = 5;
  int64 leader_commit = 6;
}

message AppendEntriesResponse {
  int64 term = 1;
  bool success = 2;
}

// A simple LogEntry message for demonstration.
message LogEntry {
  int64 term = 1;
  string command = 2;
}